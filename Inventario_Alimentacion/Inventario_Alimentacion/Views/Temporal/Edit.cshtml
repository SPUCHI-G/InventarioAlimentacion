@model Inventario_Alimentacion.Models.Temporal

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layoutjefe.cshtml";
}

<link href="~/Content/Site.css" rel="stylesheet" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h1 style="text-align: center">
        <strong class="title">EDITAR</strong>
    </h1>
    <h3>Editar antes de guardar en el inventario </h3>
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID_Det_entr)

        <div class="form-group">
            @Html.Label("ID:  ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID_Det_entr, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ID_Det_entr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("ID Entrada", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fk_Entrada, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.fk_Entrada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tipo de entrada", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("fk_TipoEntrada", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.fk_TipoEntrada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Proveedor: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("fk_Proveedor", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.fk_Proveedor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Donante: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("fk_Donante", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.fk_Donante, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Categoria:  ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.CategoriaList != null)
                {
                    @Html.DropDownListFor(m => m.ID_Categoria, ViewBag.CategoriaList as SelectList, "--- Select Category Name ---", new { @class = "form-control", required = "required" })

                }
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Subcategoria:  ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ID_Subcategoria, new SelectList(""), "--- Select Subcategory ---", new { @class = "form-control", required = "required" })

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Producto:  ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ID_NomProducto, new SelectList(""), "--- Select ProductName ---", new { @class = "form-control", required = "required" })

            </div>
        </div>

        <script src="~/Scripts/jquery-3.4.1.min.js"></script>
        <script>
            $(document).ready(function () {
                $("#ID_Categoria").change(function () {
                    var c = $(this).val();
                    debugger
                    $.ajax({
                        type: "post",
                        url: "/Detalle_Entrada/GetSubcategoriaList?ID_Categoria=" + c,
                        contentType: "html",
                        success: function (response) {
                            debugger
                            $("#ID_Subcategoria").empty();
                            $("#ID_Subcategoria").append(response);
                        }
                    })
                })
                $("#ID_Subcategoria").change(function () {
                    var o = $(this).val();
                    debugger
                    $.ajax({
                        type: "post",
                        url: "/Detalle_Entrada/GetNom_ProductoList?ID_Subcategoria=" + o,
                        contentType: "html",
                        success: function (response) {
                            debugger
                            $("#ID_NomProducto").empty();
                            $("#ID_NomProducto").append(response);
                        }
                    })
                })
            })
        </script>


        <div class="form-group">
            @Html.Label("Fecha de vencimiento: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ent_FechVencim, new { htmlAttributes = new { @class = "form-control datepicker", Value = DateTime.Now.ToShortDateString(), @type = "date" } })
                @Html.ValidationMessageFor(model => model.Ent_FechVencim, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Cantidad/Peso: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ent_Cantidad_Peso, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Ent_Cantidad_Peso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Temperatura: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ent_Temperatura, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Ent_Temperatura, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Factura: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ent_Factura, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Ent_Factura, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Precio Unitario: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ent_Precio_Unitario, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Ent_Precio_Unitario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("IVA: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ent_iva, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Ent_iva, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Descuento: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ent_Descuento, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Ent_Descuento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Precio Total: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ent_Precio_Total, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ent_Precio_Total, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="MODIFICAR" class="btn btn-success" />|
                @Html.ActionLink("Regresar", "Create", "Detalle_Entrada")
            </div>
        </div>
    </div>
}

@section Scripts {
    $.validator.methods.range = function (value, element, param) {
    var globalizedValue = value.replace(",", ".");
    return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
    }

    $.validator.methods.number = function (value, element) {
    return this.optional(element) || /-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
    }
    //Date dd/MM/yyyy
    $.validator.methods.date = function (value, element) {
    var date = value.split("/");
    return this.optional(element) || !/Invalid|NaN/.test(new Date(date[2], date[1], date[0]).toString());
    }
}
