//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventario_Alimentacion.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BD_InventarioEntities : DbContext
    {
        public BD_InventarioEntities()
            : base("name=BD_InventarioEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cargo> Cargo { get; set; }
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Ciudad> Ciudad { get; set; }
        public virtual DbSet<Donante> Donante { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<Entrada> Entrada { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<Salida> Salida { get; set; }
        public virtual DbSet<Subcategoria> Subcategoria { get; set; }
        public virtual DbSet<Tipo_Documento> Tipo_Documento { get; set; }
        public virtual DbSet<Tipo_Entrada> Tipo_Entrada { get; set; }
        public virtual DbSet<Tipo_Salida> Tipo_Salida { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Nom_Producto> Nom_Producto { get; set; }
        public virtual DbSet<Detalle_Entrada> Detalle_Entrada { get; set; }
        public virtual DbSet<Detalle_Salida> Detalle_Salida { get; set; }
        public virtual DbSet<Temporal> Temporal { get; set; }
        public virtual DbSet<Temporal2> Temporal2 { get; set; }
    
        public virtual int spCrearCategoria(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearCategoria", nombreParameter);
        }
    
        public virtual int spCrearNom_Producto(Nullable<int> id_Sub, string nombre, Nullable<decimal> min, Nullable<decimal> punto_pedido, Nullable<bool> prop_Adicion)
        {
            var id_SubParameter = id_Sub.HasValue ?
                new ObjectParameter("Id_Sub", id_Sub) :
                new ObjectParameter("Id_Sub", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var minParameter = min.HasValue ?
                new ObjectParameter("Min", min) :
                new ObjectParameter("Min", typeof(decimal));
    
            var punto_pedidoParameter = punto_pedido.HasValue ?
                new ObjectParameter("Punto_pedido", punto_pedido) :
                new ObjectParameter("Punto_pedido", typeof(decimal));
    
            var prop_AdicionParameter = prop_Adicion.HasValue ?
                new ObjectParameter("Prop_Adicion", prop_Adicion) :
                new ObjectParameter("Prop_Adicion", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearNom_Producto", id_SubParameter, nombreParameter, minParameter, punto_pedidoParameter, prop_AdicionParameter);
        }
    
        public virtual int spCrearSubcategoria(Nullable<int> id_Cat, string nombre)
        {
            var id_CatParameter = id_Cat.HasValue ?
                new ObjectParameter("Id_Cat", id_Cat) :
                new ObjectParameter("Id_Cat", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearSubcategoria", id_CatParameter, nombreParameter);
        }
    
        public virtual int spCrearProducto(Nullable<int> idc, Nullable<int> ids, Nullable<int> idp, ObjectParameter id)
        {
            var idcParameter = idc.HasValue ?
                new ObjectParameter("idc", idc) :
                new ObjectParameter("idc", typeof(int));
    
            var idsParameter = ids.HasValue ?
                new ObjectParameter("ids", ids) :
                new ObjectParameter("ids", typeof(int));
    
            var idpParameter = idp.HasValue ?
                new ObjectParameter("idp", idp) :
                new ObjectParameter("idp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearProducto", idcParameter, idsParameter, idpParameter, id);
        }
    
        public virtual ObjectResult<string> spValidaUsuario(string usuario, Nullable<int> permiso)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var permisoParameter = permiso.HasValue ?
                new ObjectParameter("permiso", permiso) :
                new ObjectParameter("permiso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spValidaUsuario", usuarioParameter, permisoParameter);
        }
    
        public virtual int spLlenarEntrada(string usuario)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLlenarEntrada", usuarioParameter);
        }
    
        public virtual ObjectResult<spBuscarDetEmpleado_up_Result> spBuscarDetEmpleado_up(Nullable<int> idEmpleado, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spBuscarDetEmpleado_up_Result>("spBuscarDetEmpleado_up", idEmpleadoParameter, inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<spMostrarDeta_Salidas_Result> spMostrarDeta_Salidas(Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostrarDeta_Salidas_Result>("spMostrarDeta_Salidas", inicioParameter, finParameter);
        }
    
        public virtual int spConsultar_Inventario(string categoria, string subcategoria, string producto)
        {
            var categoriaParameter = categoria != null ?
                new ObjectParameter("categoria", categoria) :
                new ObjectParameter("categoria", typeof(string));
    
            var subcategoriaParameter = subcategoria != null ?
                new ObjectParameter("subcategoria", subcategoria) :
                new ObjectParameter("subcategoria", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spConsultar_Inventario", categoriaParameter, subcategoriaParameter, productoParameter);
        }
    
        public virtual int spBuscar_Vencidos(string categoria, string subcategoria, string producto)
        {
            var categoriaParameter = categoria != null ?
                new ObjectParameter("categoria", categoria) :
                new ObjectParameter("categoria", typeof(string));
    
            var subcategoriaParameter = subcategoria != null ?
                new ObjectParameter("subcategoria", subcategoria) :
                new ObjectParameter("subcategoria", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBuscar_Vencidos", categoriaParameter, subcategoriaParameter, productoParameter);
        }
    
        public virtual int spBuscar_ProxVencer(string categoria, string subcategoria, string producto)
        {
            var categoriaParameter = categoria != null ?
                new ObjectParameter("categoria", categoria) :
                new ObjectParameter("categoria", typeof(string));
    
            var subcategoriaParameter = subcategoria != null ?
                new ObjectParameter("subcategoria", subcategoria) :
                new ObjectParameter("subcategoria", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("producto", producto) :
                new ObjectParameter("producto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spBuscar_ProxVencer", categoriaParameter, subcategoriaParameter, productoParameter);
        }
    
        public virtual int spGuardarExcel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGuardarExcel");
        }
    
        public virtual int spGuardarExcel_Vencidos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGuardarExcel_Vencidos");
        }
    
        public virtual ObjectResult<spGuardarExcel_Det_Ent_Result> spGuardarExcel_Det_Ent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGuardarExcel_Det_Ent_Result>("spGuardarExcel_Det_Ent");
        }
    
        public virtual ObjectResult<spGuardarExcel_Det_Sal_Result> spGuardarExcel_Det_Sal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGuardarExcel_Det_Sal_Result>("spGuardarExcel_Det_Sal");
        }
    
        public virtual int spGuardarExcel_Inventario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGuardarExcel_Inventario");
        }
    
        public virtual int spMostrarDeta_Entradas(Nullable<System.DateTime> inicio, Nullable<System.DateTime> fin)
        {
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var finParameter = fin.HasValue ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMostrarDeta_Entradas", inicioParameter, finParameter);
        }
    }
}
